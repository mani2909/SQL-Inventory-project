--create a database for inventory management

CREATE DATABASE INVENTORY;

USE INVENTORY;

/***** SUPPLIER table ******/

CREATE TABLE SUPPLIER
(SID CHAR(5),
 SNAME VARCHAR(15) NOT NULL,
 SADDR VARCHAR(30) NOT NULL,
 SCITY VARCHAR(12) DEFAULT 'DELHI',
 SPHONE CHAR(15) UNIQUE,
 SMAIL VARCHAR(30),
 PRIMARY KEY(SID));

 SELECT * FROM SUPPLIER;


/***** PRODUCT table ******/

CREATE TABLE PRODUCT
(PID CHAR(5),
 PDESC VARCHAR(50) NOT NULL,
 PRICE INT CHECK(PRICE>0),
 CATEGORY CHAR(2) CHECK(CATEGORY IN ('IT','HA','HC')),        -- HA - Home Appliances , HC - Health Care
 SID CHAR(5) REFERENCES SUPPLIER(SID),
 PRIMARY KEY(PID));

 SELECT * FROM PRODUCT;


 /***** STOCK table ******/

CREATE TABLE STOCK
(PID CHAR(5) REFERENCES PRODUCT(PID),
 SQTY INT CHECK(SQTY>=0),                           -- SQTY - Stock Quantity, ROL - ReOrder Level, MOQ - Minimum Order Quantity
 ROL INT CHECK(ROL>0),
 MOQ INT CHECK(MOQ>=2),
 PRIMARY KEY(PID));

 SELECT * FROM STOCK;


 /***** CUSTOMER table ******/

CREATE TABLE CUSTOMER
(CID CHAR(5),
 CNAME VARCHAR(20) NOT NULL,
 ADDR VARCHAR(30) NOT NULL,
 CITY VARCHAR(15) NOT NULL,
 PHONE CHAR(15) NOT NULL,
 EMAIL VARCHAR(30),
 DOB DATE CHECK(DOB<'01/JAN/2005'),
 PRIMARY KEY(CID));

 SELECT * FROM CUSTOMER;


 /***** ORDERS table ******/

CREATE TABLE ORDERS
(OID CHAR(5),
 ODATE DATE,
 PID CHAR(5) REFERENCES PRODUCT(PID),
 CID CHAR(5) REFERENCES CUSTOMER(CID),
 OQTY INT CHECK(OQTY>=1),
 PRIMARY KEY(OID));

 SELECT * FROM ORDERS;


/*****insert data in all 5 tables******/

SELECT * FROM SUPPLIER;

INSERT INTO SUPPLIER
VALUES('S0001','VIJAY SALES','DWARKA SEC 11','DELHI','9333339222','VJ12@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES('S0002','PHILIPS','HUDA CITY','GURGAON','93333391111','PHILIPS@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES('S0003','HOPS CARE','CHURCHGATE','MUMBAI','34526354635','HOPS@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES('S0004','DELL TECH','DWARKA SEC 12','DELHI','93445556672','TECHDELL@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES('S0005','CROMA','SOUTH BOMBAY','MUMBAI','9121212345','CROMA@GMAIL.COM');


--in PRODUCT table

SELECT * FROM PRODUCT;

INSERT INTO PRODUCT
VALUES('P0001','KEYBOARD',1000,'IT','S0001');

INSERT INTO PRODUCT
VALUES('P0002','SANITIZER',300,'HC','S0003');

INSERT INTO PRODUCT
VALUES('P0003','MASK',100,'HC','S0003');

INSERT INTO PRODUCT
VALUES('P0004','LAPTOP',50000,'IT','S0005');

INSERT INTO PRODUCT
VALUES('P0005','MOUSE',800,'IT','S0005');

INSERT INTO PRODUCT
VALUES('P0006','MICROWAVE',20000,'HA','S0002');

INSERT INTO PRODUCT
VALUES('P0007','STOVE',10000,'HA','S0001');

INSERT INTO PRODUCT
VALUES('P0008','DELL LAPTOP',30000,'IT','S0004');

INSERT INTO PRODUCT
VALUES('P0009','KEYBOARD',1000,'IT','S0004');

INSERT INTO PRODUCT
VALUES('P0010','REFRIGERATOR',15000,'HA','S0001');

INSERT INTO PRODUCT
VALUES('P0011','LAPTOP',80000,'IT','S0005');

INSERT INTO PRODUCT
VALUES('P0012','JUICER',3000,'HA','S0001');

INSERT INTO PRODUCT
VALUES('P0013','KEYBOARD',2000,'IT','S0004');

INSERT INTO PRODUCT
VALUES('P0014','THERMOMETER',500,'HC','S0003');

INSERT INTO PRODUCT
VALUES('P0015','WASHING MACHINE',18000,'HA','S0005');


--in STOCK table

SELECT * FROM STOCK;

INSERT INTO STOCK
VALUES('P0001',20,10,2);

INSERT INTO STOCK
VALUES('P0003',100,10,3);

INSERT INTO STOCK
VALUES('P0004',20,10,2);

INSERT INTO STOCK
VALUES('P0006',10,5,2);

INSERT INTO STOCK
VALUES('P0007',200,50,3);

INSERT INTO STOCK
VALUES('P0010',15,10,2);

INSERT INTO STOCK
VALUES('P0011',27,10,2);

INSERT INTO STOCK
VALUES('P0012',200,10,4);

INSERT INTO STOCK
VALUES('P0013',20,10,2);


--in CUSTOMER table

SELECT * FROM CUSTOMER;

INSERT INTO CUSTOMER
VALUES('C0001','NAVEEN SHARMA','SEC 48','GURGAON','92345647373','NV@GMAIL.COM','01/FEB/2002');

INSERT INTO CUSTOMER
VALUES('C0002','RIYA JAIN','SEC 15','MUMBAI','92345121212','RIYA10@GMAIL.COM','18/JAN/2000');

INSERT INTO CUSTOMER
VALUES('C0003','DEEPAK KUMAR','CHURCHGATE','MUMBAI','92125647373','DEEP@GMAIL.COM','01/JUN/2003');

INSERT INTO CUSTOMER
VALUES('C0004','RAVI SHARMA','SEC 40','GURGAON','92345647123','RAVI1@GMAIL.COM','30/MAR/2002');

INSERT INTO CUSTOMER
VALUES('C0005','ROHINI MISHRA','SEC 4','DELHI','92300647373','ROHINI@GMAIL.COM','20/FEB/2004');

INSERT INTO CUSTOMER
VALUES('C0006','JIGYASA SINGH','SEC 18','DELHI','9005647373','JIGI@GMAIL.COM','01/DEC/2002');

INSERT INTO CUSTOMER
VALUES('C0007','ROHIT SHARMA','SEC 7','PUNE','82345647373','ROHIT@GMAIL.COM','23/JUL/2002');


--in ORDERS table

SELECT * FROM ORDERS;

INSERT INTO ORDERS
VALUES('O0001','02/FEB/2020','P0005','C0002',3);

INSERT INTO ORDERS
VALUES('O0002','05/MAR/2020','P0003','C0001',2);

INSERT INTO ORDERS
VALUES('O0003','02/JUN/2020','P0002','C0005',4);

INSERT INTO ORDERS
VALUES('O0004','19/JUN/2020','P0010','C0002',3);

INSERT INTO ORDERS
VALUES('O0005','20/JUL/2020','P0012','C0004',5);


/* displaying data using JOINS */

--Display PID,PDESC,Category,SNAME,SCITY 

SELECT PID,PDESC,CATEGORY,SNAME,SCITY
FROM PRODUCT
INNER JOIN SUPPLIER
ON SUPPLIER.SID=PRODUCT.SID;


--Display OID,ODATE, CNAME, ADDR, PHONE, PDESC, PRICE, OQTY , AMOUNT of order

SELECT OID,ODATE,CNAME,ADDR,PHONE,PDESC,PRICE,OQTY,PRICE*OQTY AS 'AMOUNT'
FROM ORDERS
INNER JOIN CUSTOMER
ON ORDERS.CID=CUSTOMER.CID
INNER JOIN PRODUCT
ON ORDERS.PID=PRODUCT.PID;


--Create BILL (a VIEW) for customer id /name

SELECT * FROM PRODUCT;
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER;  --(data from 3 tables )

/***** BILL ******/

CREATE VIEW BILL
AS
  SELECT OID,ODATE,CNAME,ADDR,PHONE,PDESC,PRICE,OQTY,PRICE*OQTY AS 'AMOUNT'
  FROM ORDERS
  INNER JOIN CUSTOMER
  ON ORDERS.CID=CUSTOMER.CID
  INNER JOIN PRODUCT
  ON PRODUCT.PID=ORDERS.PID;

SELECT * FROM BILL;

--to fetch bill for a particular customer

CREATE FUNCTION BILL_CUST(@ID AS CHAR(5))
RETURNS TABLE
AS
  RETURN(SELECT OID,ODATE,CNAME,ADDR,PHONE,PDESC,PRICE,OQTY,PRICE*OQTY AS 'AMOUNT'
         FROM ORDERS
		 INNER JOIN CUSTOMER
		 ON ORDERS.CID=CUSTOMER.CID
         INNER JOIN PRODUCT
         ON PRODUCT.PID=ORDERS.PID
		 WHERE CUSTOMER.CID=@ID);

SELECT * FROM DBO.BILL_CUST('C0002');


/***************************************************************************/


/***** SEQUENCES  *************/

--to generate automatic ids for all tables

CREATE SEQUENCE SSEQ   --for Supplier table
AS INT
START WITH 7
INCREMENT BY 1;

CREATE SEQUENCE PSEQ   --for Product table
AS INT
START WITH 17
INCREMENT BY 1;

CREATE SEQUENCE CSEQ   --for Customer Table
AS INT
START WITH 9
INCREMENT BY 1;

CREATE SEQUENCE OSEQ    --for Orders table
AS INT
START WITH 7
INCREMENT BY 1;

--Function To generate automatic alphanumeric id for each table (like 'S0001','P0004'etc.)

CREATE FUNCTION ID(@C AS CHAR(1),@I AS INT)
RETURNS CHAR(5)
AS
BEGIN
    DECLARE @ID AS CHAR(5);
	IF @I<10
	SET @ID=CONCAT(@C,'000',@I);
	ELSE IF @I<100
	SET @ID=CONCAT(@C,'00',@I);
	ELSE IF @I<1000
	SET @ID=CONCAT(@C,'0',@I);
	ELSE IF @I<10000
	SET @ID=CONCAT(@C,@I);
	ELSE
	SET @ID='NA';
	RETURN @ID;
END;

SELECT DBO.ID('C',1);





/**** STORED PROCEDURES ********/

--1. ADDSUPPLIER -stored procedure to add Supplier in Supplier table.

SELECT * FROM SUPPLIER;

CREATE PROCEDURE ADDSUPPLIER @SN AS VARCHAR(15), @SA AS VARCHAR(30), @SC AS VARCHAR(20), 
@PH AS CHAR(15),@SM AS VARCHAR(30)
AS
BEGIN
    DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);

	SET @I=(NEXT VALUE FOR SSEQ);
	SET @ID=DBO.ID('S',@I);

    INSERT INTO SUPPLIER
	VALUES(@ID,@SN,@SA,@SC,@PH,@SM);
	SELECT * FROM SUPPLIER
	WHERE SID=@ID;
END;

ADDSUPPLIER 'D MART','POWAI','MUMBAI','34256231934','DM32@GMAIL.COM';


--2. ADDPRO -stored procedure to add Product in Product table.

SELECT * FROM PRODUCT;

CREATE PROCEDURE ADDPRO @PD AS VARCHAR(40), @P AS INT, @CT AS VARCHAR(5),@SID AS CHAR(5)
AS
BEGIN
    DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);

	SET @I=(NEXT VALUE FOR PSEQ);
	SET @ID=DBO.ID('P',@I);

    INSERT INTO PRODUCT
	VALUES(@ID,@PD,@P,@CT,@SID);
	SELECT * FROM PRODUCT
	WHERE PID=@ID;
END;

ADDPRO 'JUICER',3000,'HA','S0007';


--3. ADDCUST -stored procedure to add Customer in Customer table.

SELECT * FROM CUSTOMER;

CREATE PROCEDURE ADDCUST @CN AS VARCHAR(20), @CA AS VARCHAR(30), @CC AS VARCHAR(20), 
@PH AS CHAR(15),@EM AS VARCHAR(30),@DB AS DATE
AS
BEGIN
    DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);

	SET @I=(NEXT VALUE FOR CSEQ);
	SET @ID=DBO.ID('C',@I);

    INSERT INTO CUSTOMER
	VALUES(@ID,@CN,@CA,@CC,@PH,@EM,@DB);
	SELECT * FROM CUSTOMER
	WHERE CID=@ID;
END;

ADDCUST 'ARYA SINGH','JP NAGAR','DELHI','4567329495','SINGHARYA@GMAIL.COM','25/JULY/1998';



--4. ADDORDER -stored procedure to add Order in ORDERS table.

SELECT * FROM ORDERS;

CREATE PROCEDURE ADDORDER @OD AS DATE,@PID AS CHAR(5),@CID AS CHAR(5),@OQ AS INT
AS
BEGIN
    DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);

	SET @I=(NEXT VALUE FOR OSEQ);
	SET @ID=DBO.ID('O',@I);

    INSERT INTO ORDERS
	VALUES(@ID,@OD,@PID,@CID,@OQ);
	SELECT * FROM ORDERS
	WHERE OID=@ID;
END;

ADDORDER '30/JAN/2021','P0017','C0002',2;


SELECT * FROM SUPPLIER;
SELECT * FROM PRODUCT;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;
SELECT * FROM STOCK;


/******************************************************************/


/****** TRIGGERS ********/

SELECT * FROM ORDERS;
SELECT * FROM STOCK;


--INSERT TRIGGER ( if we place an order , first check QTY <= SQTY , and update SQTY in STOCK table)

CREATE TRIGGER IN_ORDERS
ON ORDERS
FOR INSERT
AS
BEGIN
    DECLARE @QR AS INT;
	DECLARE @QS AS INT;     --@QR - Quantity required , @QS - Qunatity in Stock

	SET @QR=(SELECT OQTY FROM INSERTED);
	SET @QS=(SELECT SQTY FROM STOCK
	         WHERE PID=(SELECT PID FROM INSERTED));

	IF @QR<=@QS
	BEGIN
	    UPDATE STOCK SET SQTY=SQTY-@QR
		WHERE PID=(SELECT PID FROM INSERTED);
		COMMIT;
	END;
	ELSE
	     ROLLBACK;
END;


INSERT INTO ORDERS
VALUES('O0008','12/FEB/2021','P0003','C0002',10);

SELECT * FROM ORDERS;
SELECT * FROM STOCK;

--(SQTY decreased from 100 to 90 in STOCKS table)

INSERT INTO ORDERS
VALUES('O0009','12/FEB/2021','P0003','C0002',100);  --(order not placed as OQTY>SQTY)


/***************************************/

--UPDATE TRIGGER ( if we update an order , first check QTY <= SQTY , and update SQTY in STOCK table)

CREATE TRIGGER UPD_ORDERS
ON ORDERS
FOR UPDATE
AS
BEGIN
    DECLARE @OQ AS INT;
	DECLARE @NQ AS INT;
	DECLARE @QS AS INT;    --@OQ - old quantity, @NQ- new quantity , @QS - Qunatity in Stock now

	SET @OQ=(SELECT OQTY FROM DELETED);
	SET @NQ=(SELECT OQTY FROM INSERTED);
	SET @QS=(SELECT SQTY FROM STOCK
	         WHERE PID=(SELECT PID FROM INSERTED));

	IF @NQ<=@QS+@OQ
	BEGIN
	    UPDATE STOCK SET SQTY=SQTY+@OQ-@NQ
		WHERE PID=(SELECT PID FROM INSERTED);
		COMMIT;
	END;
	ELSE
	     ROLLBACK;
END;


--FOR ORDER 'O0008' ,customer wants to update OQTY from 10 to 20.(product-'P0003')
--(So, in STOCKS table , SQTY should also get updated).

UPDATE ORDERS SET OQTY=20
WHERE OID='O0008';

SELECT * FROM ORDERS;
SELECT * FROM STOCK;

/***************************/


--DELETE TRIGGER (if we delete some product from STOCK table, it shoul also get deleted from PRODUCT table)


CREATE TRIGGER DEL_PRO
ON STOCK
FOR DELETE
AS
BEGIN
   DELETE FROM PRODUCT
   WHERE PID=(SELECT PID FROM DELETED);
END;


DELETE FROM STOCK
WHERE PID='P0011';

SELECT * FROM PRODUCT;
SELECT * FROM STOCK;   --deleted from both tables


/************************************************************/


--Supplier report  (Details of all products ,that we are procurring from a particular supplier)

SELECT * FROM SUPPLIER;
SELECT * FROM PRODUCT;

CREATE PROCEDURE SUPPLIER_REPORT @SID AS CHAR(5)
AS
BEGIN
   SELECT PID,PDESC,PRICE,CATEGORY
   FROM PRODUCT
   WHERE SID=@SID
END;

SUPPLIER_REPORT 'S0002';


/******************************/


--Customer report (Details of all orders by a particular customer)

SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER;

CREATE PROCEDURE CUSTOMER_REPORT @CID AS CHAR(5)
AS
BEGIN
   SELECT OID,ODATE,PID,OQTY
   FROM ORDERS
   WHERE CID=@CID
END;

CUSTOMER_REPORT 'C0002';